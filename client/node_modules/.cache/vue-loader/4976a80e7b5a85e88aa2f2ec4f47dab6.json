{"remainingRequest":"/Users/garrett.cramer@ibm.com/project1/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/garrett.cramer@ibm.com/project1/client/src/components/Books.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/garrett.cramer@ibm.com/project1/client/src/components/Books.vue","mtime":1567228712125},{"path":"/Users/garrett.cramer@ibm.com/project1/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/garrett.cramer@ibm.com/project1/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/garrett.cramer@ibm.com/project1/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/garrett.cramer@ibm.com/project1/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      books: [],\n      addBookForm: {\n        title: '',\n        author: '',\n        read: [],\n      },\n    };\n  },\n  methods: {\n    getBooks() {\n      const path = 'http://localhost:5000/chart';\n      axios.get(path)\n        .then((res) => {\n          this.books = res.data.books;\n        })\n        .catch((error) => {\n          // eslint-disable-next-line\n          console.error(error);\n        });\n    },\n    addBook(payload) {\n      const path = 'http://localhost:5000/chart';\n      axios.post(path, payload)\n        .then(() => {\n          this.getBooks();\n        })\n        .catch((error) => {\n          // eslint-disable-next-line\n          console.log(error);\n          this.getBooks();\n        });\n    },\n    initForm() {\n      this.addBookForm.title = '';\n      this.addBookForm.author = '';\n      this.addBookForm.read = [];\n    },\n    onSubmit(evt) {\n      evt.preventDefault();\n      this.$refs.addBookModal.hide();\n      let read = false;\n      if (this.addBookForm.read[0]) read = true;\n      const payload = {\n        title: this.addBookForm.title,\n        author: this.addBookForm.author,\n        read, // property shorthand\n      };\n      this.addBook(payload);\n      this.initForm();\n    },\n    onReset(evt) {\n      evt.preventDefault();\n      this.$refs.addBookModal.hide();\n      this.initForm();\n    },\n  },\n  created() {\n  },\n};\n",{"version":3,"sources":["Books.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Books.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-sm-10\">\n        <h1>Books</h1>\n        <hr><br><br>\n        <button type=\"button\" class=\"btn btn-success btn-sm\" v-b-modal.book-modal>Add Book</button>\n        <br><br>\n        <table class=\"table table-hover\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Title</th>\n              <th scope=\"col\">Author</th>\n              <th scope=\"col\">Read?</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr v-for=\"(book, index) in books\" :key=\"index\">\n              <td>{{ book.title }}</td>\n              <td>{{ book.author }}</td>\n              <td>\n                <span v-if=\"book.read\">Yes</span>\n                <span v-else>No</span>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    <b-modal ref=\"addBookModal\"\n            id=\"book-modal\"\n            title=\"Add a new book\"\n            hide-footer>\n      <b-form @submit=\"onSubmit\" @reset=\"onReset\" class=\"w-100\">\n      <b-form-group id=\"form-title-group\"\n                    label=\"Title:\"\n                    label-for=\"form-title-input\">\n          <b-form-input id=\"form-title-input\"\n                        type=\"text\"\n                        v-model=\"addBookForm.title\"\n                        required\n                        placeholder=\"Enter title\">\n          </b-form-input>\n        </b-form-group>\n        <b-form-group id=\"form-author-group\"\n                      label=\"Author:\"\n                      label-for=\"form-author-input\">\n            <b-form-input id=\"form-author-input\"\n                          type=\"text\"\n                          v-model=\"addBookForm.author\"\n                          required\n                          placeholder=\"Enter author\">\n            </b-form-input>\n          </b-form-group>\n        <b-form-group id=\"form-read-group\">\n          <b-form-checkbox-group v-model=\"addBookForm.read\" id=\"form-checks\">\n            <b-form-checkbox value=\"true\">Read?</b-form-checkbox>\n          </b-form-checkbox-group>\n        </b-form-group>\n        <b-button-group>\n          <b-button type=\"submit\" variant=\"primary\">Submit</b-button>\n          <b-button type=\"reset\" variant=\"danger\">Reset</b-button>\n        </b-button-group>\n      </b-form>\n    </b-modal>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      books: [],\n      addBookForm: {\n        title: '',\n        author: '',\n        read: [],\n      },\n    };\n  },\n  methods: {\n    getBooks() {\n      const path = 'http://localhost:5000/chart';\n      axios.get(path)\n        .then((res) => {\n          this.books = res.data.books;\n        })\n        .catch((error) => {\n          // eslint-disable-next-line\n          console.error(error);\n        });\n    },\n    addBook(payload) {\n      const path = 'http://localhost:5000/chart';\n      axios.post(path, payload)\n        .then(() => {\n          this.getBooks();\n        })\n        .catch((error) => {\n          // eslint-disable-next-line\n          console.log(error);\n          this.getBooks();\n        });\n    },\n    initForm() {\n      this.addBookForm.title = '';\n      this.addBookForm.author = '';\n      this.addBookForm.read = [];\n    },\n    onSubmit(evt) {\n      evt.preventDefault();\n      this.$refs.addBookModal.hide();\n      let read = false;\n      if (this.addBookForm.read[0]) read = true;\n      const payload = {\n        title: this.addBookForm.title,\n        author: this.addBookForm.author,\n        read, // property shorthand\n      };\n      this.addBook(payload);\n      this.initForm();\n    },\n    onReset(evt) {\n      evt.preventDefault();\n      this.$refs.addBookModal.hide();\n      this.initForm();\n    },\n  },\n  created() {\n  },\n};\n</script>\n"]}]}